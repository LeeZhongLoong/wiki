<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 引入配置文件 -->
    <properties resource="JDBC.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <!--    <classPathEntry location="D:\mysqlConnection\mysql-connector-java-8.0.26.jar"/>-->
    <!--   路径 "D:\mysqlConnection\mysql-connector-java-5.1.32.jar"-->
    <!--    配置table表信息内容体，targetRuntime指定采用的Mybatis版本-->
    <context id="tables" targetRuntime="Mybatis3">
        <!-- 自动检查关键字，为关键字增加反引号 -->
        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 抑制生成注释，由于生成的注释都是英文的，可以不让它生成 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="true"/> <!-- 是否生成注释代时间戳-->
        </commentGenerator>
        <!-- 配置数据库连接信息 -->
        <jdbcConnection driverClass="${driver}"
                        connectionURL="${url}"
                        userId="${username}"
                        password="${password}"/>
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成Model类，targetPackage指定Model类的包名，targetProject指定,生成的model放在idea那个工程下面
        生成实体类的包名和位置 注意targetProject的值为实体类放在工程中具体位置的相对路径，-->
        <javaModelGenerator targetPackage="com.lzl.wiki.domain"
                            targetProject="src/main/java">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成 Mybatis的Mapper.xml文件，targetPackage指定mapper.xml文件的,包名，targetProject指定生成的mapper.xml放在idea工程那个下面
        生成的SQLMapper映射文件包名和位置 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="src/main/resources">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成Mybatis的Mapper接口类文件，targetPackage指定Mapper接口类的包,名，targetProject指定生成Mapper接口放在idea工程那个下面
        生成DAO的包名和位置，这里配置将生成的dao类放在me.gacl.dao这个包下 -->
        <javaClientGenerator targetPackage="com.lzl.wiki.mapper"
                             targetProject="src/main/java" type="XMLMAPPER">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->
        <!-- 更改tableName和domainObjectName就可以 -->
        <!--        数据库表名及对应的java模型类名-->
<!--        <table tableName="demo" domainObjectName="Demo"-->
<!--               enableCountByExample="false"-->
<!--               enableDeleteByExample="false"-->
<!--               enableSelectByExample="false"-->
<!--               enableUpdateByExample="false"-->
<!--               selectByExampleQueryId="false">-->
<!--        </table>-->
<!--        <table tableName="demo" domainObjectName="Demo"/>-->
<!--        <table tableName="ebook"/>-->
        <table tableName="category"/>
    </context>
</generatorConfiguration>